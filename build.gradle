def corePlugin = "com.mcmoddev.lib.asm.ASMPlugin"
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}
def v = "0.0.1"
group = "com.mcmoddev"
archivesBaseName = "mmdlib"

if(System.getenv().BUILD_NUMBER) {
    version = v+"-jenkins"+System.getenv().BUILD_NUMBER
} else {
    version = v
}
minecraft {
    version = "1.10.2-12.18.3.2185"
    runDir = "run"

    mappings = "stable_29"
    clientJvmArgs = ["-Dfml.coreMods.load=$corePlugin"]
    serverJvmArgs = ["-Dfml.coreMods.load=$corePlugin"]
    useDepAts = true
}

jar {
    manifest {
        attributes "FMLCorePlugin": corePlugin
        attributes "FMLCorePluginContainsFMLMod": "true"
        attributes "FMLAT" : "mmdlib_at.cfg"
        
    }
}

repositories {
    mavenCentral()
}

dependencies {
}

task deobfJar(type: Jar) {
    classifier = "deobf"
    from sourceSets.main.output
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives deobfJar
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
    
    rename '(.+_at.cfg)', 'META-INF/$1'
}