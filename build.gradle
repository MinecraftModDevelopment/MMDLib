def corePlugin = "com.mcmoddev.lib.asm.ASMPlugin"
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT"
        classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "maven-publish"
apply plugin: 'org.spongepowered.mixin'

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}
def v = "1.11.2-1.0.0"
group = "com.mcmoddev"
archivesBaseName = "MMDLib"

if(System.getenv().BUILD_NUMBER) {
    version = v+"."+System.getenv().BUILD_NUMBER
} else {
    version = v
}

minecraft {
    version = "1.11.2-13.20.0.2260"
    runDir = "run"
    makeObfSourceJar = false

    mappings = "snapshot_20170323"
    clientJvmArgs = ["-Dfml.coreMods.load=$corePlugin"]
    serverJvmArgs = ["-Dfml.coreMods.load=$corePlugin"]
    useDepAts = true
}

class Secrets {
    def data = null

    def getProperty(String key) {
        return data ? data[key] : ""
    }
}

import groovy.json.JsonSlurper

def secretFile
if (System.getenv().SECRET_FILE) {
    secretFile = file System.getenv().SECRET_FILE
} else {
    secretFile = file "secret.json"
}

project.ext.secret = new Secrets()
if (secretFile.exists()) {
    secretFile.withReader {
        project.ext.secret.data = new JsonSlurper().parse it
    }
}

jar {
    manifest {
        attributes "FMLCorePlugin": corePlugin
        attributes "FMLCorePluginContainsFMLMod": "true"
        attributes "FMLAT" : "mmdlib_at.cfg"
        
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spongepowered.org/maven/'
    }
}
configurations {
    shade
    compile.extendsFrom shade
}
dependencies {
    shade 'org.spongepowered:mixin:0.6.8-SNAPSHOT'
}

task deobfJar(type: Jar) {
    classifier = "deobf"
    from sourceSets.main.output
}

artifacts {
//  archives apiJar
    archives deobfJar
    archives sourceJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
            artifact deobfJar {
                classifier "deobf"
            }
        }
    }
    repositories {
        maven {
            credentials {
                username secret.username
                password secret.password
            }
            url secret.url
        }
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
    
    rename '(.+_at.cfg)', 'META-INF/$1'
}